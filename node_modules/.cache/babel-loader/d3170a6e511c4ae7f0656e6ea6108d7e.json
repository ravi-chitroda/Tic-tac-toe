{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { score } from \"../component/Navbar\";\nconst scores = {\n  xScore: 0,\n  oScore: 0\n};\nconst scoreSlice = createSlice({\n  name: \"score\",\n  initialState: scores,\n  reducers: {\n    setScores(state, action) {\n      console.log(\"action\", action.payload); // debugger;\n\n      state.data = action.payload;\n\n      if (action.payload === \"X\") {\n        state.xScore += 1;\n      } else {\n        state.oScore += 1;\n      }\n    },\n\n    ResetScores(state, action) {\n      state.data = action.payload; // if (action.payload !== 0) {\n      //   setScores(0);\n      //   console.log(\"reset,\", setScores);\n      // }\n\n      if (score !== 0) {\n        state.xScore = 0;\n      }\n\n      if (score !== 0) {\n        state.oScore = 0;\n      }\n    }\n\n  }\n});\nexport const {\n  setScores,\n  ResetScores\n} = scoreSlice.actions;\nexport default scoreSlice.reducer;","map":{"version":3,"names":["createSlice","score","scores","xScore","oScore","scoreSlice","name","initialState","reducers","setScores","state","action","console","log","payload","data","ResetScores","actions","reducer"],"sources":["C:/practice/ticl/src/store/scoreSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { score } from \"../component/Navbar\";\r\n\r\nconst scores = { xScore: 0, oScore: 0 };\r\n\r\nconst scoreSlice = createSlice({\r\n  name: \"score\",\r\n  initialState: scores,\r\n  reducers: {\r\n    setScores(state, action) {\r\n      console.log(\"action\", action.payload);\r\n      // debugger;\r\n      state.data = action.payload;\r\n      if (action.payload === \"X\") {\r\n        state.xScore += 1;\r\n      } else {\r\n        state.oScore += 1;\r\n      }\r\n    },\r\n    ResetScores(state, action) {\r\n      state.data = action.payload;\r\n      // if (action.payload !== 0) {\r\n      //   setScores(0);\r\n      //   console.log(\"reset,\", setScores);\r\n      // }\r\n      if (score !== 0) {\r\n        state.xScore = 0;\r\n      }\r\n      if (score !== 0) {\r\n        state.oScore = 0;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setScores, ResetScores } = scoreSlice.actions;\r\nexport default scoreSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAEA,MAAMC,MAAM,GAAG;EAAEC,MAAM,EAAE,CAAV;EAAaC,MAAM,EAAE;AAArB,CAAf;AAEA,MAAMC,UAAU,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,OADuB;EAE7BC,YAAY,EAAEL,MAFe;EAG7BM,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACvBC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAM,CAACG,OAA7B,EADuB,CAEvB;;MACAJ,KAAK,CAACK,IAAN,GAAaJ,MAAM,CAACG,OAApB;;MACA,IAAIH,MAAM,CAACG,OAAP,KAAmB,GAAvB,EAA4B;QAC1BJ,KAAK,CAACP,MAAN,IAAgB,CAAhB;MACD,CAFD,MAEO;QACLO,KAAK,CAACN,MAAN,IAAgB,CAAhB;MACD;IACF,CAVO;;IAWRY,WAAW,CAACN,KAAD,EAAQC,MAAR,EAAgB;MACzBD,KAAK,CAACK,IAAN,GAAaJ,MAAM,CAACG,OAApB,CADyB,CAEzB;MACA;MACA;MACA;;MACA,IAAIb,KAAK,KAAK,CAAd,EAAiB;QACfS,KAAK,CAACP,MAAN,GAAe,CAAf;MACD;;MACD,IAAIF,KAAK,KAAK,CAAd,EAAiB;QACfS,KAAK,CAACN,MAAN,GAAe,CAAf;MACD;IACF;;EAvBO;AAHmB,CAAD,CAA9B;AA8BA,OAAO,MAAM;EAAEK,SAAF;EAAaO;AAAb,IAA6BX,UAAU,CAACY,OAA9C;AACP,eAAeZ,UAAU,CAACa,OAA1B"},"metadata":{},"sourceType":"module"}