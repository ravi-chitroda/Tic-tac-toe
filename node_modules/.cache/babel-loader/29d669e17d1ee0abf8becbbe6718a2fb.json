{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initial = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\nlet strings = Array.from(initial);\nconst isXChance = false;\nconst GameStateSlice = createSlice({\n  name: \"gameState\",\n  initialState: initial,\n  reducers: {\n    // setisXChance(state, action) {\n    //   strings[index] = isXChance ? \"X\" : \"O\";\n    //   state.strings = action.payload;\n    // },\n    setGameState(state, action) {\n      // debugger;\n      const {\n        index,\n        isXChance\n      } = action === null || action === void 0 ? void 0 : action.payload;\n      strings[index] = isXChance ? \"X\" : \"O\"; // return (state[index] = initial[action.payload]);\n      // state[index] = initial[index];\n      // return (state = (initial) => [...initial, action.payload]);\n      // state.push(action.payload);\n      // state = action.payload;\n      // state.strings = strings(initial);\n      // console.log(\"state\", setGameState);\n      // state = [...action.payload];\n      // state = action.payload;\n      // state.data = [{ ...strings }, action.payload];\n      // state.push(strings.action.payload);\n      // state.push(...strings);\n    }\n\n  }\n});\nexport const {\n  setGameState,\n  setisXChance\n} = GameStateSlice.actions;\nexport default GameStateSlice.reducer;","map":{"version":3,"names":["createSlice","initial","strings","Array","from","isXChance","GameStateSlice","name","initialState","reducers","setGameState","state","action","index","payload","setisXChance","actions","reducer"],"sources":["C:/practice/ticl/src/store/GameStateSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initial = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\nlet strings = Array.from(initial);\r\nconst isXChance = false;\r\n\r\nconst GameStateSlice = createSlice({\r\n  name: \"gameState\",\r\n  initialState: initial,\r\n  reducers: {\r\n    // setisXChance(state, action) {\r\n    //   strings[index] = isXChance ? \"X\" : \"O\";\r\n    //   state.strings = action.payload;\r\n    // },\r\n    setGameState(state, action) {\r\n      // debugger;\r\n      const { index, isXChance } = action?.payload;\r\n      strings[index] = isXChance ? \"X\" : \"O\";\r\n      // return (state[index] = initial[action.payload]);\r\n      // state[index] = initial[index];\r\n      // return (state = (initial) => [...initial, action.payload]);\r\n\r\n      // state.push(action.payload);\r\n      // state = action.payload;\r\n      // state.strings = strings(initial);\r\n      // console.log(\"state\", setGameState);\r\n      // state = [...action.payload];\r\n      // state = action.payload;\r\n      // state.data = [{ ...strings }, action.payload];\r\n      // state.push(strings.action.payload);\r\n      // state.push(...strings);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setGameState, setisXChance } = GameStateSlice.actions;\r\nexport default GameStateSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,OAAO,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,CAAhB;AACA,IAAIC,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAWH,OAAX,CAAd;AACA,MAAMI,SAAS,GAAG,KAAlB;AAEA,MAAMC,cAAc,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,WAD2B;EAEjCC,YAAY,EAAEP,OAFmB;EAGjCQ,QAAQ,EAAE;IACR;IACA;IACA;IACA;IACAC,YAAY,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAC1B;MACA,MAAM;QAAEC,KAAF;QAASR;MAAT,IAAuBO,MAAvB,aAAuBA,MAAvB,uBAAuBA,MAAM,CAAEE,OAArC;MACAZ,OAAO,CAACW,KAAD,CAAP,GAAiBR,SAAS,GAAG,GAAH,GAAS,GAAnC,CAH0B,CAI1B;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD;;EAtBO;AAHuB,CAAD,CAAlC;AA6BA,OAAO,MAAM;EAAEK,YAAF;EAAgBK;AAAhB,IAAiCT,cAAc,CAACU,OAAtD;AACP,eAAeV,cAAc,CAACW,OAA9B"},"metadata":{},"sourceType":"module"}